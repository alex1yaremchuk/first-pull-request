name: CI

on:
  pull_request:
    branches:
      - main

jobs:
  lint-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Check that commits only modify files (no add or remove)
      run: |
        if git diff --name-status origin/main HEAD | grep -E '^[AD]\s+'; then
          echo "Error: Not allowed to add or remove files in this repo."
          exit 1
        fi

    - name: Validate commit messages format
      run: |
        git log origin/main..HEAD --oneline --no-merges | while read line; do
          commit_msg=$(echo "$line" | cut -d' ' -f2-)
          echo "Checking commit: $commit_msg"
          if [[ ! "$commit_msg" =~ ^(feat|fix|chore|docs|refactor|test)(\(.+\))?:\ .+ ]]; then 
            echo "❌ Invalid commit message: '$COMMIT_MSG'. Must follow 'type(scope): message' format."
            exit 1
          fi
          echo "✔ Commit message is valid."
        done          

    - name: Validate branch naming format
      run: |
        branch_name=$(echo "${{ github.head_ref }}" | sed 's|refs/heads/||')
        echo "Branch name is: $branch_name"
        if [[ ! "$branch_name" =~ ^(feature|fix|chore|docs)/.+$ ]]; then
          echo "❌ Invalid branch name: '$branch_name'. Must follow 'feature/*', 'fix/*', etc."
          exit 1
        fi
        echo "✔ Branch name is valid."

    - name: Determine Changes
      id: changes
      run: |
        # Step 1: Capture changed files
        export CHANGED_FILES=$(git diff --name-only origin/main HEAD)

        # Debugging: Output the changed files
        echo "Changed files detected:"
        echo "$CHANGED_FILES"

        # Step 2: Debug the variables before writing them to GITHUB_ENV
        # Check if JS files were changed
        JS_CHANGED=$(echo "$CHANGED_FILES" | grep -E '\.js$|\.jsx$|javascript/' || echo "")
        echo "JS_CHANGED detected: $JS_CHANGED"

        # Check if Zig files were changed
        ZIG_CHANGED=$(echo "$CHANGED_FILES" | grep -E '\.zig$|zig/' || echo "")
        echo "ZIG_CHANGED detected: $ZIG_CHANGED"

        # Step 3: Add the environment variables to GITHUB_ENV (with proper formatting)
        echo "JS_CHANGED=${JS_CHANGED:-}" >> $GITHUB_ENV
        echo "ZIG_CHANGED=${ZIG_CHANGED:-}" >> $GITHUB_ENV

    - name: Setup Node.js
      if: env.JS_CHANGED != ''
      uses: actions/setup-node@v4
      with: 
        node-version: '17'

    - name: JS tests
      if: env.JS_CHANGED != ''
      run: |
        cd javascript
        npm install
        npm run lint
        npm test

    - name: Install Zig using Snap
      if: env.ZIG_CHANGED != ''
      run: sudo snap install zig --classic --beta
      
    - name: Run tests Zig
      if: env.ZIG_CHANGED != ''
      run: zig test zig/index.zig

